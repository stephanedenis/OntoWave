#!/usr/bin/env python3
"""
Test de validation du nettoyage des fichiers index

V√©rifie que :
1. Les fichiers index.fr.md et index.en.md existent et sont coh√©rents
2. Le fichier index.md vide a √©t√© supprim√©
3. Aucune r√©f√©rence obsol√®te aux dossiers basic/ et testing/
4. Les liens vers les d√©monstrations fonctionnent
"""

import requests
import os
import sys

def test_index_files_exist():
    """V√©rifie que les fichiers index n√©cessaires existent"""
    base_url = "http://localhost:8080"
    
    # Test index.fr.md
    response = requests.get(f"{base_url}/index.fr.md")
    assert response.status_code == 200, "index.fr.md doit √™tre accessible"
    assert "OntoWave" in response.text, "index.fr.md doit contenir le titre OntoWave"
    assert "Une biblioth√É¬®que JavaScript puissante" in response.text, "index.fr.md doit contenir le contenu fran√ßais"
    
    # Test index.en.md
    response = requests.get(f"{base_url}/index.en.md")
    assert response.status_code == 200, "index.en.md doit √™tre accessible"
    assert "OntoWave" in response.text, "index.en.md doit contenir le titre OntoWave"
    assert "A powerful JavaScript library" in response.text, "index.en.md doit contenir le contenu anglais"
    
    print("‚úÖ Les fichiers index.fr.md et index.en.md sont accessibles")

def test_no_obsolete_references():
    """V√©rifie qu'il n'y a plus de r√©f√©rences aux dossiers supprim√©s"""
    base_url = "http://localhost:8080"
    
    # Test index.fr.md
    response = requests.get(f"{base_url}/index.fr.md")
    content_fr = response.text
    assert "demo/basic/" not in content_fr, "index.fr.md ne doit plus r√©f√©rencer demo/basic/"
    assert "demo/testing/" not in content_fr, "index.fr.md ne doit plus r√©f√©rencer demo/testing/"
    assert "Exemples H√©rit√©s" not in content_fr, "index.fr.md ne doit plus contenir 'Exemples H√©rit√©s'"
    assert "Suite de Tests" not in content_fr, "index.fr.md ne doit plus contenir 'Suite de Tests'"
    
    # Test index.en.md
    response = requests.get(f"{base_url}/index.en.md")
    content_en = response.text
    assert "demo/basic/" not in content_en, "index.en.md ne doit plus r√©f√©rencer demo/basic/"
    assert "demo/testing/" not in content_en, "index.en.md ne doit plus r√©f√©rencer demo/testing/"
    assert "Legacy Examples" not in content_en, "index.en.md ne doit plus contenir 'Legacy Examples'"
    assert "Testing Suite" not in content_en, "index.en.md ne doit plus contenir 'Testing Suite'"
    
    print("‚úÖ Aucune r√©f√©rence obsol√®te trouv√©e")

def test_valid_demo_links():
    """V√©rifie que les liens vers les d√©monstrations sont valides"""
    base_url = "http://localhost:8080"
    
    # V√©rifier que les d√©monstrations existent
    demos = [
        "demo/minimal-demo.html",
        "demo/advanced-demo.html", 
        "demo/full-config.html"
    ]
    
    for demo in demos:
        response = requests.get(f"{base_url}/{demo}")
        assert response.status_code == 200, f"La d√©mo {demo} doit √™tre accessible"
    
    print("‚úÖ Toutes les d√©monstrations r√©f√©renc√©es sont accessibles")

def test_index_md_removed():
    """V√©rifie que le fichier index.md vide a √©t√© supprim√©"""
    base_url = "http://localhost:8080"
    
    # Test que index.md n'existe plus ou est vide
    response = requests.get(f"{base_url}/index.md")
    # Soit 404 (fichier supprim√©), soit contenu vide si le serveur renvoie quand m√™me quelque chose
    if response.status_code == 200:
        assert len(response.text.strip()) == 0, "index.md doit √™tre vide s'il existe encore"
    
    print("‚úÖ Le fichier index.md vide a √©t√© trait√© correctement")

if __name__ == "__main__":
    try:
        print("üß™ Test de validation du nettoyage des fichiers index")
        print()
        
        test_index_files_exist()
        test_no_obsolete_references()  
        test_valid_demo_links()
        test_index_md_removed()
        
        print()
        print("üéâ TOUS LES TESTS PASSENT !")
        print("‚úÖ Le nettoyage des fichiers index est valid√©")
        print("‚úÖ Plus de duplication entre les fichiers index")
        print("‚úÖ Plus de r√©f√©rences obsol√®tes aux dossiers supprim√©s")
        print("‚úÖ OntoWave peut fonctionner correctement avec les fichiers nettoy√©s")
        
    except Exception as e:
        print(f"‚ùå Test √©chou√© : {str(e)}")
        sys.exit(1)
