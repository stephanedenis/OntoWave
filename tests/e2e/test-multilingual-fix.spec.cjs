const { test, expect } = require('@playwright/test');

test.describe('Fix Syst√®me Multilingue OntoWave', () => {
  
  test('Redirection automatique vers langue par d√©faut sans hash', async ({ page }) => {
    console.log('üß™ Test : Redirection automatique multilingue');
    
    // Aller sur la page sans hash
    await page.goto('http://localhost:8080/');
    
    // Attendre que OntoWave se charge et redirige
    await page.waitForTimeout(2000);
    
    // V√©rifier que l'URL contient maintenant le hash de la langue par d√©faut
    const currentUrl = page.url();
    console.log('üìç URL apr√®s redirection:', currentUrl);
    
    expect(currentUrl).toContain('#index.fr.md');
  });

  test('Mode multilingue : pas de code hardcod√© dans HTML', async ({ page }) => {
    console.log('üß™ Test : Absence de code de redirection hardcod√©');
    
    // R√©cup√©rer le contenu HTML brut
    const response = await page.goto('http://localhost:8080/');
    const html = await response.text();
    
    // V√©rifier que le code de redirection n'est pas dans le HTML
    expect(html).not.toContain('if (!window.location.hash)');
    expect(html).not.toContain('window.location.hash = ');
    
    console.log('‚úÖ Aucun code de redirection hardcod√© trouv√© dans le HTML');
  });

  test('Syst√®me multilingue complet fonctionnel', async ({ page }) => {
    console.log('üß™ Test : Fonctionnement du syst√®me multilingue');
    
    // Aller sur la page
    await page.goto('http://localhost:8080/');
    await page.waitForTimeout(3000);
    
    // V√©rifier que OntoWave s'est bien charg√© et initialis√©
    const ontoWaveExists = await page.evaluate(() => {
      return typeof window.OntoWave !== 'undefined';
    });
    
    expect(ontoWaveExists).toBe(true);
    console.log('‚úÖ OntoWave initialis√©');
    
    // V√©rifier que le contenu fran√ßais est charg√©
    const hasContent = await page.locator('#ontowave-content').count();
    expect(hasContent).toBeGreaterThan(0);
    console.log('‚úÖ Contenu charg√©');
    
    // V√©rifier la pr√©sence des boutons de langue
    const langButtons = await page.locator('[data-lang]').count();
    expect(langButtons).toBeGreaterThan(0);
    console.log('‚úÖ Boutons de langue pr√©sents');
  });

});
