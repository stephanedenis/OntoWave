const { test, expect } = require('@playwright/test');

test.describe('Test OntoWave simplifi√©', () => {
    test('Page OntoWave simple fonctionne', async ({ page }) => {
        console.log('üöÄ Test OntoWave simplifi√© sans multilingue');
        
        await page.goto('http://localhost:8080');
        
        // Attendre que OntoWave charge le contenu
        await page.waitForTimeout(3000);
        
        console.log('‚úÖ 1. Page charg√©e');
        
        // V√©rifier que le script est pr√©sent
        const script = await page.locator('script[src="ontowave.min.js"]').count();
        expect(script).toBe(1);
        console.log('‚úÖ 2. Script ontowave.min.js charg√©');
        
        // V√©rifier que OntoWave a cr√©√© ses √©l√©ments
        const ontoWaveContainer = await page.locator('.ontowave-container').count();
        console.log(`üì¶ Conteneurs OntoWave trouv√©s: ${ontoWaveContainer}`);
        
        // V√©rifier que le contenu markdown est rendu
        const content = await page.locator('.ontowave-content').count();
        console.log(`üìÑ Contenus OntoWave trouv√©s: ${content}`);
        
        // V√©rifier qu'il n'y a pas d'erreurs JavaScript critiques
        const logs = [];
        page.on('console', msg => {
            if (msg.type() === 'error') {
                logs.push(msg.text());
            }
        });
        
        await page.waitForTimeout(2000);
        
        const criticalErrors = logs.filter(log => 
            log.includes('Uncaught') || 
            log.includes('SyntaxError') ||
            log.includes('ReferenceError')
        );
        
        if (criticalErrors.length > 0) {
            console.log('‚ö†Ô∏è Erreurs critiques:', criticalErrors);
        } else {
            console.log('‚úÖ 3. Pas d\'erreurs JavaScript critiques');
        }
        
        // V√©rifier que le titre est correct
        const title = await page.title();
        expect(title).toBe('OntoWave - Documentation');
        console.log('‚úÖ 4. Titre correct');
        
        // V√©rifier la pr√©sence de contenu textuel
        const bodyText = await page.locator('body').textContent();
        const hasContent = bodyText.includes('OntoWave') || bodyText.includes('Micro-application');
        
        if (hasContent) {
            console.log('‚úÖ 5. Contenu OntoWave d√©tect√©');
        } else {
            console.log('‚ö†Ô∏è 5. Contenu OntoWave non d√©tect√© - peut-√™tre en cours de chargement');
        }
        
        console.log('üéâ TEST SIMPLIFI√â TERMIN√â !');
        console.log('üì¶ HTML minimal sans styles CSS');
        console.log('üö´ Pas de syst√®me multilingue complexe');
        console.log('‚ö° Configuration OntoWave basique');
    });
});
