const { test, expect } = require('@playwright/test');

test.describe('Validation finale Prism + Multilingue', () => {
  test('Page d\'accueil compl√®tement fonctionnelle', async ({ page }) => {
    // Capturer les erreurs pour diagnostic
    page.on('console', msg => {
      if (msg.type() === 'error') {
        console.log('‚ùå ERREUR CONSOLE:', msg.text());
      }
    });
    
    await page.goto('http://localhost:8080/');
    
    // Attendre le chargement complet d'OntoWave
    await page.waitForTimeout(3000);
    
    // Test 1: V√©rifier que le contenu markdown est affich√©
    await expect(page.locator('h1')).toContainText('OntoWave');
    console.log('‚úÖ Titre principal affich√©');
    
    // Test 2: V√©rifier que les boutons de langue sont pr√©sents et fonctionnent
    const frButton = page.locator('#btn-fr');
    const enButton = page.locator('#btn-en');
    
    await expect(frButton).toBeVisible();
    await expect(enButton).toBeVisible();
    console.log('‚úÖ Boutons de langue pr√©sents');
    
    // Test 3: V√©rifier le contenu fran√ßais par d√©faut
    const frContent = page.locator('#lang-fr');
    await expect(frContent).toContainText('Micro-application pour sites statiques');
    console.log('‚úÖ Contenu fran√ßais affich√© par d√©faut');
    
    // Test 4: Tester la bascule vers l'anglais
    await enButton.click();
    await page.waitForTimeout(500);
    
    const enContent = page.locator('#lang-en');
    await expect(enContent).toContainText('Micro-application for static sites');
    console.log('‚úÖ Bascule vers l\'anglais fonctionnelle');
    
    // Test 5: Retour au fran√ßais
    await frButton.click();
    await page.waitForTimeout(500);
    await expect(frContent).toContainText('Micro-application pour sites statiques');
    console.log('‚úÖ Retour au fran√ßais fonctionnel');
    
    // Test 6: V√©rifier que Prism colore le code HTML
    const codeBlocks = page.locator('pre code.language-html');
    const count = await codeBlocks.count();
    expect(count).toBeGreaterThan(0);
    console.log(`‚úÖ ${count} blocs de code HTML d√©tect√©s`);
    
    // V√©rifier la coloration syntaxique
    const firstBlock = codeBlocks.first();
    const innerHTML = await firstBlock.innerHTML();
    expect(innerHTML).toContain('<span');
    console.log('‚úÖ Coloration syntaxique Prism active');
    
    // Test 7: V√©rifier que le menu OntoWave est pr√©sent
    const menu = page.locator('#ontowave-floating-menu');
    await expect(menu).toBeVisible();
    console.log('‚úÖ Menu flottant OntoWave pr√©sent');
    
    console.log('üéâ TOUS LES TESTS PASS√âS - Page d\'accueil enti√®rement fonctionnelle !');
  });
});
