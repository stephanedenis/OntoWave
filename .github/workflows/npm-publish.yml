name: NPM Publish

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  # Job pour les PR mergés : bump de version patch et publication
  publish-pr:
    if: github.event.pull_request.merged == true || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci || npm install
        
      - name: Run tests
        run: npm run test --if-present || echo "Tests skipped or failed - continuing"
        continue-on-error: true
        
      - name: Build package
        run: |
          npm run build
          npm run build:package
          
      - name: Commit build artifacts
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff --staged --quiet || git commit -m "chore: build artifacts [skip ci]"
          
      - name: Bump version (patch)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version patch
          
      - name: Push version changes
        run: |
          git push
          git push --tags
          
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Job pour les tags : publication de version spécifique
  publish-tag:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci || npm install
        
      - name: Run tests
        run: npm run test --if-present || echo "Tests skipped or failed - continuing"
        continue-on-error: true
        
      - name: Build package
        run: |
          npm run build
          npm run build:package
          
      - name: Set version from tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          npm version $TAG_VERSION --no-git-tag-version
          
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: OntoWave ${{ github.ref }}
          body: |
            ## Nouvelle version OntoWave
            
            ### Changements inclus dans cette version :
            - Fix des alignements de tableaux markdown
            - Injection CSS directe dans le DOM
            - Support complet des alignements `:---`, `:---:`, `---:`
            
            ### Installation :
            ```bash
            npm install ontowave@${{ github.ref }}
            ```
            
            ### CDN :
            ```html
            <script src="https://cdn.jsdelivr.net/npm/ontowave@${{ github.ref }}/dist/ontowave.min.js"></script>
            ```
          draft: false
          prerelease: false